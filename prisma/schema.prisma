// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id                      String        @id     @default(uuid())
  authid                  String        @unique
  authProvider            String
  userName                String?
  firstName               String?
  lastName                String?
  email                   String?
  phone                   String?
  interviewCount          Int                   @default(0)
  interview               Interview[] 
  resume                  Resume[]

  @@index([authid])
  // @@index([id])
  //id is already the primary key, which means itâ€™s automatically indexed.
  //You only need @@index if you want to query frequently by non-primary fields (e.g., username).
}

model Interview{
  id                      String        @id     @default(uuid())
  role                    String
  userId                  String
  score                   Int
  responses               InterviewResponse[]
  user                    User                  @relation(fields: [userId] , references: [id])
  createdAt               DateTime              @default(now())
}

model InterviewResponse{
  id                      String        @id     @default(uuid())
  question                String
  answer                  String
  score                   Int
  remark                  String
  interviewId             String
  interview               Interview             @relation(fields: [interviewId] , references: [id])
}

model Resume{
  id                      String        @id     @default(uuid())
  userId                  String
  content                 String
  user                    User                  @relation(fields: [userId] , references: [id])
}
